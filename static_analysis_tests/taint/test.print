(module
 (type $0 (func (result i32)))
 (type $1 (func (param i32)))
 (type $2 (func))
 (global $global$0 i32 (i32.const 0))
 (export "taint_source" (func $source))
 (export "taint_sink" (func $sink))
 (start $main)
 (func $source (; 0 ;) (type $0) (result i32)
  (i32.const 69)
 )
 (func $sink (; 1 ;) (type $1) (param $0 i32)
 )
 (func $main (; 2 ;) (type $2)
  (local $0 i32)
  (local.set $0
   (call $source)
  )
  (if
   (i32.eqz
    (global.get $global$0)
   )
   (local.set $0
    (i32.const 32)
   )
  )
  (call $sink
   (local.get $0)
  )
 )
)
